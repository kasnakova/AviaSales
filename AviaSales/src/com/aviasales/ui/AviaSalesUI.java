package com.aviasales.ui;

import java.io.IOException;
import java.time.LocalDate;
import java.time.Month;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

import com.aviasales.logic.Analizator;
import com.aviasales.models.Flight;
import com.aviasales.models.Route;
import com.aviasales.models.SearchParams;
import com.aviasales.utilities.UserInputValidator;
import com.aviasales.utilities.Utils;
import java.util.List;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Liza
 */
public class AviaSalesUI extends javax.swing.JFrame {
    private List<Route> routes;
    
    /**
     * Creates new form AviaSalesUI
     */
    public AviaSalesUI() {
        initComponents();
        setComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelSearch = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtFromAirport = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtToAirport = new javax.swing.JTextField();
        chkTwoWayFlight = new javax.swing.JCheckBox();
        btnSearch = new javax.swing.JButton();
        lisFlights = new javax.swing.JScrollPane();
        listOfRoutes = new javax.swing.JList<>();
        txtDate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtReturnDate = new javax.swing.JTextField();
        lblReturnDate = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtPersonCount = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuSearch = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AviaSales");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel1.setText("From:");

        txtFromAirport.setText("KAZAN");
        txtFromAirport.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel2.setText("To:");

        txtToAirport.setText("KISLOVODSK");
        txtToAirport.setToolTipText("");

        chkTwoWayFlight.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        chkTwoWayFlight.setText("Two-way flight");
        chkTwoWayFlight.setToolTipText("");
        chkTwoWayFlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkTwoWayFlightActionPerformed(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        listOfRoutes.setToolTipText("");
        listOfRoutes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listOfRoutesMouseClicked(evt);
            }
        });
        lisFlights.setViewportView(listOfRoutes);

        txtDate.setToolTipText("Format: day/month/year");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel3.setText("Date:");

        txtReturnDate.setToolTipText("Format: day/month/year");

        lblReturnDate.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblReturnDate.setText("Return Date:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel4.setText("Person count:");

        txtPersonCount.setText("2");
        txtPersonCount.setToolTipText("");

        javax.swing.GroupLayout panelSearchLayout = new javax.swing.GroupLayout(panelSearch);
        panelSearch.setLayout(panelSearchLayout);
        panelSearchLayout.setHorizontalGroup(
            panelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lisFlights)
                    .addGroup(panelSearchLayout.createSequentialGroup()
                        .addComponent(chkTwoWayFlight)
                        .addGap(43, 43, 43)
                        .addComponent(lblReturnDate)
                        .addGap(18, 18, 18)
                        .addComponent(txtReturnDate, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelSearchLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtFromAirport, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txtToAirport, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(txtPersonCount, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelSearchLayout.setVerticalGroup(
            panelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtFromAirport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtToAirport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtPersonCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(panelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkTwoWayFlight)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblReturnDate)
                    .addComponent(txtReturnDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lisFlights, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                .addContainerGap())
        );

        menuSearch.setText("Search");
        menuSearch.setToolTipText("");
        jMenuBar1.add(menuSearch);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setComponents(){
        lblReturnDate.setVisible(false);
        txtReturnDate.setVisible(false);
        String todayStr = Utils.parseToString(LocalDate.now());
        txtDate.setText(todayStr);
        txtReturnDate.setText(todayStr);
    }
    
    private void chkTwoWayFlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkTwoWayFlightActionPerformed
        lblReturnDate.setVisible(chkTwoWayFlight.isSelected());
        txtReturnDate.setVisible(chkTwoWayFlight.isSelected());
    }//GEN-LAST:event_chkTwoWayFlightActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String from = txtFromAirport.getText();
        String to = txtToAirport.getText();
        boolean isReturn = chkTwoWayFlight.isSelected();
        if(UserInputValidator.isNullOrEmpty(from)){
           MessageBoxes.showInvalidInputMessageBox(this, "Please enter from which airport you want to travel.");
        }else if(UserInputValidator.isNullOrEmpty(to)){
            MessageBoxes.showInvalidInputMessageBox(this, "Please enter to which airport you want to travel.");
        } else if(!UserInputValidator.isDateValid(txtDate.getText())) {
             MessageBoxes.showInvalidInputMessageBox(this, "Please enter a valid date in the described format and one that hadn't passed already.");
        } else if(isReturn && !UserInputValidator.isDateValid(txtReturnDate.getText())) {
             MessageBoxes.showInvalidInputMessageBox(this, "Please enter a valid return date in the described format and one that hadn't passed already.");
        } else if(!UserInputValidator.isPersonCountValid(txtPersonCount.getText())) {
             MessageBoxes.showInvalidInputMessageBox(this, "Please enter a valid person count.");
        } else {
            LocalDate date = Utils.parseToLocalDate(txtDate.getText()); 
            int personCount = Integer.parseInt(txtPersonCount.getText());
            LocalDate returnDate = null;
            if(isReturn){
                returnDate = Utils.parseToLocalDate(txtReturnDate.getText());
            }

            SearchParams sp = new SearchParams(from, to, date, personCount);
            //SearchParams sp = new SearchParams("KAZAN", "KISLOVODSK", LocalDate.of(2016, Month.AUGUST, 14), 2);

            try {
                routes = Analizator.searchFlights(sp);
            } catch (IOException ex) {
                Logger.getLogger(AviaSalesUI.class.getName()).log(Level.SEVERE, null, ex);
            }

            if(routes != null && routes.size() > 0){
                String[] routeData = new String[routes.size()];
                for (int i = 0; i < routeData.length; i++) {
                    routeData[i] = routes.get(i).toString();
                }

                listOfRoutes.setListData(routeData);
            } else {
                JOptionPane.showMessageDialog(this, "No flights match your criteria", "Sorry", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void listOfRoutesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listOfRoutesMouseClicked
        int selectedRouteIndex = listOfRoutes.getSelectedIndex();
        Route route = routes.get(selectedRouteIndex);
        PersonalInfoFrame frame = new PersonalInfoFrame(route);
        frame.setVisible(true);
    }//GEN-LAST:event_listOfRoutesMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JCheckBox chkTwoWayFlight;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLabel lblReturnDate;
    private javax.swing.JScrollPane lisFlights;
    private javax.swing.JList<String> listOfRoutes;
    private javax.swing.JMenu menuSearch;
    private javax.swing.JPanel panelSearch;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtFromAirport;
    private javax.swing.JTextField txtPersonCount;
    private javax.swing.JTextField txtReturnDate;
    private javax.swing.JTextField txtToAirport;
    // End of variables declaration//GEN-END:variables
}


